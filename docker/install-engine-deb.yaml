---
- hosts: localhost
  connection: local
  become: true
  gather_facts: false

  vars:
    repository: stable  # other possible values: nightly, test
    links: []

  pre_tasks:
    - name: install-engine-deb | Determine name of Debian distribution
      shell: >
        [[ -e /etc/debian_version ]]
        && source /etc/os-release
        && echo ${DEBIAN_CODENAME:-$VERSION_CODENAME}
      args:
        executable: /bin/bash
      register: codename
      changed_when: false

    - name: install-engine-deb | Determine architecture packages are installed for
      command: dpkg --print-architecture
      register: arch
      changed_when: false

    - name: install-engine-deb | Install helper package
      apt:
        name:
          - curl

    - name: install-engine-deb | Find latest packages
      shell: >
        curl --fail --silent --show-error https://download.docker.com/linux/debian/dists/{{ codename.stdout }}/pool/{{ repository }}/{{ arch.stdout }}/
        | sed 's/<[^>]*>//g'
        | grep -o '{{ item }}_.*\.deb'
        | tail -n 1
      args:
        warn: false
      register: files
      changed_when: false
      loop:
        # the order here is important for the upcoming installation because of
        # mutual dependencies
        - containerd.io
        - docker-ce-cli
        - docker-ce

    - name: install-engine-deb | Build list of download links
      set_fact:
        links: "{{ links }} + [ 'https://download.docker.com/linux/debian/dists/{{ codename.stdout }}/pool/{{ repository }}/{{ arch.stdout }}/{{ item.stdout }}' ]"
      loop: "{{ files.results }}"

  tasks:
    - name: install-engine-deb | Uninstall old versions
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: install-engine-deb | Install packages
      apt:
        deb: "{{ item }}"
      loop: "{{ links }}"

    - name: install-engine-deb | Start and enable service
      service:
        name: docker
        state: started
        enabled: true

    - name: install-engine-deb | Add current user to group
      user:
        name: "{{ ansible_user }}"
        groups:
          - docker
        append: true

# vim: et sw=2 ts=2
